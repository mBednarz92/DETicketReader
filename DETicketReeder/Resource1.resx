<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CACertificate" xml:space="preserve">
    <value>fyGCAe1fToHtA0VVVkRWGAMGAAAAAERFVkRWFQERVkRWX0tBMCAhEDAqhkiG
 9w0BAQW3QS8doo5ABtrsqzq4KAgB7wf2DmcFeleRyuQlMpdktFVoNJ3ss7DVWjuPUy1eJexk0uF
 38+fA27p0lzqpk4+BSeaqekPky5m0VI9rgDpSurXMrwui0LXOCB8ohCPfHx8d/iqTKyAU6vNy2L
 APB7889HuZRbouyahVUItnrocmy71Z6gpFXxemjk63s8aOfOiymLaNYcdn4uLQO5otfRaCbMJgO
 zjbBnOqMRi9hSpeZPp/YHyINb1LALNyBcAXKdcAAQABXzeB+BnkoBGxvyrgG91O4EyY5Q/WG3ra
 5DBcuoNL8Y+88EhjKxnaI5ImuRgKOqmnZkgTEb9BRLHLF4ln8EFe03SEs2ht6vy7xHWA5SXR3b6
 C3YyrtZVWAvYqL0uE0hoUAjFOEyVIpnVMD9HCv3SrkBJ86F31zckF9Bs39cwUa2bs1Y7j145SS1
 mLpCYhNUZvaOLL3xap3+irWroTMKTlDWEuuNcCNDtjkl+NxjgXPzOBgixVhJGIaaaj2xiPiWidd
 7XxbjRXK0yeaUiX0XT++R+QJHQUBsjwDjpjDpP7Hdx4oe41k/B+6AXIfIOFbyYKRrmYv14gRTXi</value>
  </data>
  <data name="InputData" xml:space="preserve">
    <value>9E 81 80 70 21 AA 6C BE 2C 07 3A 37 FE 43 83 EF 08 F5 12 14 2F C8 AD 8D 72 24 5F C8 64 B2 AF 5D 17 A6 34 7F 90 6C 13 94 AC 4B 7D 7A 66 46 70 D2 EA F7 ED E0 19 9C 07 E8 A2 71 C4 CD 5A 44 01 A8 EC 83 FC E1 A2 F2 51 0F D8 A0 39 BE CB BA 7C F5 73 56 9E 1D A4 B8 68 73 25 12 05 F7 A4 4C E4 6D 9C 59 19 02 9E EC AE 1A 39 BC E4 05 19 6B 03 99 96 C5 2A CE 17 FD 60 72 96 8F 7F 28 A8 78 59 EA 18 05 CF 9A 0F 00 00 00 00 00 00 00 00 00 00 56 44 56 11 09 7F 21 81 C8 5F 37 81 C0 39 F2 C0 04 92 04 5A F1 51 8A 57 C5 D7 73 43 48 A0 01 AC 50 CC AD 40 DC 7F 37 1A 34 A6 3C DB CB 16 EB 7B 72 C5 77 D8 A5 51 C5 9F CF 42 06 B4 40 CB 9E 2A D3 8F F3 0E 97 7D 0B 8E 0D 4A 19 01 01 F2 75 F1 DF 86 30 E1 02 4C 74 B5 A8 EA 7C 00 3D 65 B5 E2 01 14 EC DA 96 92 5E BA 14 58 49 CE 26 FD 74 84 46 59 3D E1 1A 6E 15 6A 38 4C BB C7 AB 9E E5 CF C7 D5 FC 69 5A 1F 3C 14 4A B7 4F 29 15 12 50 79 EB EB 43 81 2A 2A 6B EF 9B 08 C9 3D C7 28 B4 A1 6F 21 F2 BC 9E 06 DF 72 80 1E C0 AD 2A EA DB CD 56 DE 53 59 38 44 D0 15 A2 7B 76 3F 1C E5 A6 DD CC FD DD C3 B8 09 06 B0 80 C2 D0 B9 8E 5F 38 01 81 42 08 44 45 56 44 56 11 02 16</value>
  </data>
</root>